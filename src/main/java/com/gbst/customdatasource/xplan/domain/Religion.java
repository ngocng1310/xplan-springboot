//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.01.24 at 02:11:13 PM AEST 
//


package com.gbst.customdatasource.xplan.domain;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Religion.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Religion">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Atheist"/>
 *     &lt;enumeration value="Bahai"/>
 *     &lt;enumeration value="Buddhist"/>
 *     &lt;enumeration value="Candombl"/>
 *     &lt;enumeration value="Christian - Anglican"/>
 *     &lt;enumeration value="Christian - Baptist"/>
 *     &lt;enumeration value="Christian - Methodist"/>
 *     &lt;enumeration value="Christian - Protestant"/>
 *     &lt;enumeration value="Christian - Catholic"/>
 *     &lt;enumeration value="Christian - Greek Orhodox"/>
 *     &lt;enumeration value="Christian - Roman Catholic"/>
 *     &lt;enumeration value="Christian - Other"/>
 *     &lt;enumeration value="Hindu"/>
 *     &lt;enumeration value="Islam"/>
 *     &lt;enumeration value="Jain"/>
 *     &lt;enumeration value="Jehovahs Witness"/>
 *     &lt;enumeration value="Judaism"/>
 *     &lt;enumeration value="Mormon"/>
 *     &lt;enumeration value="Paganist"/>
 *     &lt;enumeration value="Rastafari"/>
 *     &lt;enumeration value="Santeria"/>
 *     &lt;enumeration value="Shinto"/>
 *     &lt;enumeration value="Sikh"/>
 *     &lt;enumeration value="Taoism"/>
 *     &lt;enumeration value="Unitarian"/>
 *     &lt;enumeration value="Zoroastrian"/>
 *     &lt;enumeration value="Other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "Religion")
@XmlEnum
public enum Religion {

    @XmlEnumValue("Atheist")
    ATHEIST("Atheist"),
    @XmlEnumValue("Bahai")
    BAHAI("Bahai"),
    @XmlEnumValue("Buddhist")
    BUDDHIST("Buddhist"),
    @XmlEnumValue("Candombl")
    CANDOMBL("Candombl"),
    @XmlEnumValue("Christian - Anglican")
    CHRISTIAN_ANGLICAN("Christian - Anglican"),
    @XmlEnumValue("Christian - Baptist")
    CHRISTIAN_BAPTIST("Christian - Baptist"),
    @XmlEnumValue("Christian - Methodist")
    CHRISTIAN_METHODIST("Christian - Methodist"),
    @XmlEnumValue("Christian - Protestant")
    CHRISTIAN_PROTESTANT("Christian - Protestant"),
    @XmlEnumValue("Christian - Catholic")
    CHRISTIAN_CATHOLIC("Christian - Catholic"),
    @XmlEnumValue("Christian - Greek Orhodox")
    CHRISTIAN_GREEK_ORHODOX("Christian - Greek Orhodox"),
    @XmlEnumValue("Christian - Roman Catholic")
    CHRISTIAN_ROMAN_CATHOLIC("Christian - Roman Catholic"),
    @XmlEnumValue("Christian - Other")
    CHRISTIAN_OTHER("Christian - Other"),
    @XmlEnumValue("Hindu")
    HINDU("Hindu"),
    @XmlEnumValue("Islam")
    ISLAM("Islam"),
    @XmlEnumValue("Jain")
    JAIN("Jain"),
    @XmlEnumValue("Jehovahs Witness")
    JEHOVAHS_WITNESS("Jehovahs Witness"),
    @XmlEnumValue("Judaism")
    JUDAISM("Judaism"),
    @XmlEnumValue("Mormon")
    MORMON("Mormon"),
    @XmlEnumValue("Paganist")
    PAGANIST("Paganist"),
    @XmlEnumValue("Rastafari")
    RASTAFARI("Rastafari"),
    @XmlEnumValue("Santeria")
    SANTERIA("Santeria"),
    @XmlEnumValue("Shinto")
    SHINTO("Shinto"),
    @XmlEnumValue("Sikh")
    SIKH("Sikh"),
    @XmlEnumValue("Taoism")
    TAOISM("Taoism"),
    @XmlEnumValue("Unitarian")
    UNITARIAN("Unitarian"),
    @XmlEnumValue("Zoroastrian")
    ZOROASTRIAN("Zoroastrian"),
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    Religion(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Religion fromValue(String v) {
        for (Religion c: Religion.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
